package teach;

/**************
** WARNING - this code automatically generated by Syntona.
** The real source is probably a Syntona patch.
** Do NOT edit this file unless you copy it to another directory and change the name.
** Otherwise it is likely to get clobbered the next time you
** export Java source code from Syntona.
**
** Syntona is available from: http://www.softsynth.com/syntona/
*/

import com.jsyn.ports.UnitOutputPort;
import com.jsyn.unitgen.*;
import com.jsyn.ports.UnitInputPort;
import com.softsynth.shared.time.TimeStamp;

public class SimpleRingMod extends Circuit implements UnitVoice, UnitSink {
	// Declare units and ports.
	PassThrough mFrequencyPassThrough;
	public UnitInputPort frequency;
	PassThrough mAmplitudePassThrough;
	public UnitInputPort amplitude;
	PassThrough mOutputPassThrough;
	public UnitOutputPort output;
	PassThrough mInputPassThrough;
	public UnitInputPort input;
	SineOscillator mSineOsc;
	Multiply mAtimes;

	// Declare inner classes for any child circuits.

	public SimpleRingMod() {
		// Create unit generators.
		add(mFrequencyPassThrough = new PassThrough());
		addPort(frequency = mFrequencyPassThrough.input, "frequency");
		add(mAmplitudePassThrough = new PassThrough());
		addPort(amplitude = mAmplitudePassThrough.input, "amplitude");
		add(mOutputPassThrough = new PassThrough());
		addPort(output = mOutputPassThrough.output, "output");
		add(mInputPassThrough = new PassThrough());
		addPort(input = mInputPassThrough.input, "input");
		add(mSineOsc = new SineOscillator());
		add(mAtimes = new Multiply());
		// Connect units and ports.
		mFrequencyPassThrough.output.connect(mSineOsc.frequency);
		mAmplitudePassThrough.output.connect(mSineOsc.amplitude);
		mInputPassThrough.output.connect(mAtimes.inputB);
		mSineOsc.output.connect(mAtimes.inputA);
		mAtimes.output.connect(mOutputPassThrough.input);
		// Setup
		frequency.setup(40.0, 391.99543598174927, 8000.0);
		amplitude.setup(0.0, 0.5, 1.0);
		input.setup(0.0, 0.9435439581771714, 1.0);
	}

	public void noteOn(double frequency, double amplitude, TimeStamp timeStamp) {
		this.frequency.set(frequency, timeStamp);
		this.amplitude.set(amplitude, timeStamp);
	}

	public void noteOff(TimeStamp timeStamp) {
	}

	public UnitOutputPort getOutput() {
		return output;
	}

	public UnitInputPort getInput() {
		return this.input;
	}
}
